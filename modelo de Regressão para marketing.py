# -*- coding: utf-8 -*-
"""Bruno Salgado Carvalho desafio 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z0fOrMLaUsFrlsp1oyyOd0ItPxukdlwA
"""

import pandas as pd
import seaborn as sns

lista = pd.read_csv("/content/MKT.csv")
lista.info()

lista[['youtube','facebook','newspaper',]].describe()

lista[['sales']].describe()

sns.pairplot(lista, x_vars=['youtube','facebook','newspaper'], y_vars='sales')

lista.corr()

x = lista[['facebook','newspaper','youtube']]
y = lista[['sales']]

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.7, test_size=0.3, random_state=42)

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.linear_model import LinearRegression

lm = LinearRegression()

lm.fit(x_train, y_train)

y_pred = lm.predict(x_test)

from sklearn.metrics import r2_score
r = r2_score(y_test, y_pred)

print ("r_quadrado",r)

import matplotlib.pyplot as plt

c = [i for i in range(1, 53, 1)]
fig = plt.figure(figsize=(12,8))
plt.plot(c, y_test, color="black")
plt.plot(c,  y_pred, color="red")
plt.xlabel("index")
plt.ylabel("valor das vendas")

# premissa
youtube = 100
facebook = 50
newspaper = 46
entrada = [[youtube, facebook, newspaper]]
lm.predict(entrada)[0]

#premissa youtube
youtube = 100
facebook = 0
newspaper = 0
entrada = [[youtube, facebook, newspaper]]
lm.predict(entrada)[0]

#premissa facebook
youtube = 0
facebook = 100
newspaper = 0
entrada = [[youtube, facebook, newspaper]]
lm.predict(entrada)[0]

#premissa newspaper
youtube = 0
facebook = 0
newspaper = 100
entrada = [[youtube, facebook, newspaper]]
lm.predict(entrada)[0]

